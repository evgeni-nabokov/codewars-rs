use super::*;

#[test]
fn last_digit2_tests() {
    let tests = vec![
        (vec![], 1),
        (vec![0], 0),
        (vec![0, 0], 1),
        (vec![0, 0, 0], 0),
        (vec![0, 0, 0, 0, 0, 0, 0, 0], 1),
        (vec![1, 2], 1),
        (vec![3, 4, 5], 1),
        (vec![4, 3, 6], 4),
        (vec![7, 6, 21], 1),
        (vec![12, 30, 21], 6),
        (vec![2, 2, 2, 0], 4),
        (vec![937640, 767456, 981242], 0),
        (vec![123232, 694022, 140249], 6),
        (vec![499942, 898102, 846073], 6),
        (vec![2147483647, 2147483647, 2147483647, 2147483647], 3)
    ];

    for test in tests {
        assert_eq!(last_digit2(&test.0), test.1);
    }
}

#[test]
fn spiralize_tests() {
    let tests = vec![
        (
            5usize,
            vec![
                vec![1, 1, 1, 1, 1],
                vec![0, 0, 0, 0, 1],
                vec![1, 1, 1, 0, 1],
                vec![1, 0, 0, 0, 1],
                vec![1, 1, 1, 1, 1],
            ],
        ),
        (
            6usize,
            vec![
                vec![1, 1, 1, 1, 1, 1],
                vec![0, 0, 0, 0, 0, 1],
                vec![1, 1, 1, 1, 0, 1],
                vec![1, 0, 0, 1, 0, 1],
                vec![1, 0, 0, 0, 0, 1],
                vec![1, 1, 1, 1, 1, 1],
            ],
        ),
        (
            7usize,
            vec![
                vec![1, 1, 1, 1, 1, 1, 1],
                vec![0, 0, 0, 0, 0, 0, 1],
                vec![1, 1, 1, 1, 1, 0, 1],
                vec![1, 0, 0, 0, 1, 0, 1],
                vec![1, 0, 1, 1, 1, 0, 1],
                vec![1, 0, 0, 0, 0, 0, 1],
                vec![1, 1, 1, 1, 1, 1, 1],
            ],
        ),
        (
            8usize,
            vec![
                vec![1, 1, 1, 1, 1, 1, 1, 1],
                vec![0, 0, 0, 0, 0, 0, 0, 1],
                vec![1, 1, 1, 1, 1, 1, 0, 1],
                vec![1, 0, 0, 0, 0, 1, 0, 1],
                vec![1, 0, 1, 0, 0, 1, 0, 1],
                vec![1, 0, 1, 1, 1, 1, 0, 1],
                vec![1, 0, 0, 0, 0, 0, 0, 1],
                vec![1, 1, 1, 1, 1, 1, 1, 1],
            ],
        ),
        (
            9usize,
            vec![
                vec![1, 1, 1, 1, 1, 1, 1, 1, 1],
                vec![0, 0, 0, 0, 0, 0, 0, 0, 1],
                vec![1, 1, 1, 1, 1, 1, 1, 0, 1],
                vec![1, 0, 0, 0, 0, 0, 1, 0, 1],
                vec![1, 0, 1, 1, 1, 0, 1, 0, 1],
                vec![1, 0, 1, 0, 0, 0, 1, 0, 1],
                vec![1, 0, 1, 1, 1, 1, 1, 0, 1],
                vec![1, 0, 0, 0, 0, 0, 0, 0, 1],
                vec![1, 1, 1, 1, 1, 1, 1, 1, 1],
            ],
        ),
    ];
    for test in tests {
        assert_eq!(spiralize(test.0), test.1);
    }
}